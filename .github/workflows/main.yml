name: CI

on:
  pull_request:
  push:
    branches:
      - development
      - master

defaults:
  run:
    shell: sh

jobs:
  code-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: npm install
      - run: npm run test

  infastructure-test:
    container:
      image: 1mill/terraform-sops:alpine-2020-07-05T19-24-29
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_APPLICATION_REPOSITORY: ${{ github.repository }}
      TF_VAR_APPLICATION_VERSION: some-placeholder-version
      TF_VAR_HEROKU_APIKEY: ${{ secrets.HEROKU_APIKEY }}
      TF_VAR_HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: terraform init
      - run: terraform plan

  deploy-to-production:
    container:
      image: 1mill/terraform-sops:alpine-2020-07-05T19-24-29
    defaults:
      run:
        working-directory: /app
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_APPLICATION_REPOSITORY: ${{ github.repository }}
      TF_VAR_APPLICATION_VERSION: ${{ needs.package.outputs.VERSION }}
      TF_VAR_HEROKU_APIKEY: ${{ secrets.HEROKU_APIKEY }}
      TF_VAR_HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
    if: endsWith(github.ref, 'master') == true
    needs: [package]
    runs-on: ubuntu-20.04
    steps:
      - run: apk update && apk add unzip wget
      - run: wget -O /tmp/code.zip https://github.com/${{ github.repository }}/archive/${{ needs.package.outputs.VERSION }}.zip
      - run: unzip /tmp/code.zip -d /tmp
      - run: mv /tmp/*-${{ needs.package.outputs.VERSION }}/* /app
      - run: terraform init
      - run: terraform apply -auto-approve

  package:
    if: endsWith(github.ref, 'master') == true
    needs: [code-test, infastructure-test]
    outputs:
      VERSION: ${{ steps.OUTPUT_VERSION.outputs.VERSION }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-env name=VERSION::$(date +'%Y-%m-%dT%H-%M-%S')"
      - run: echo "::set-output name=VERSION::${{ env.VERSION }}"
        id: OUTPUT_VERSION
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          release_name: Release ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
